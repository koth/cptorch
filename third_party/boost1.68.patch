--- boost/date_time/special_values_parser.hpp.original	2019-04-16 11:41:18.696397319 +0800
+++ boost/date_time/special_values_parser.hpp	2019-04-16 11:41:34.440159917 +0800
@@ -102,7 +102,7 @@
     //! match() should be called and return value checked.
     //! \param[in]  str  the string to check
     //! \returns  false if it is definitely not a special value
-    static bool likely(const string_type& str)
+    static bool likely2(const string_type& str)
     {
         if (!str.empty()) {
             switch (str[0]) {
--- boost/date_time/time_parsing.hpp.original	2019-04-16 11:41:21.996347650 +0800
+++ boost/date_time/time_parsing.hpp	2019-04-16 11:41:58.483795277 +0800
@@ -309,7 +309,7 @@
     // then from_iso_string should be able to read a special value string
     // the special_values_parser is expensive to set up and not thread-safe
     // so it cannot be static, so we need to be careful about when we use it
-    if (svp_type::likely(s)) {
+    if (svp_type::likely2(s)) {
         typedef typename svp_type::stringstream_type ss_type;
         typedef typename svp_type::stream_itr_type itr_type;
         typedef typename svp_type::match_results mr_type;
